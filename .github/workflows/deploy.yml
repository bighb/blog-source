name: Deploy Blog

# 触发条件：推送到 main 分支或手动触发
on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

# 设置权限
permissions:
  contents: read
  pages: write
  id-token: write

# 确保同时只运行一个部署
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史，用于获取 git 信息
          submodules: recursive  # 递归检出子模块

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 安装依赖
        run: npm ci

      - name: 📊 显示环境信息
        run: |
          echo "Node.js 版本: $(node --version)"
          echo "npm 版本: $(npm --version)"
          echo "Hexo 版本: $(npx hexo version)"
          
      - name: 🧹 清理缓存
        run: npm run clean

      - name: 🏗️ 生成静态文件
        run: |
          npm run build
          echo "📊 构建统计:"
          echo "文章数量: $(find source/_posts -name '*.md' | wc -l)"
          echo "生成文件数量: $(find public -type f | wc -l)"
          
      - name: 🔍 验证构建结果
        run: |
          if [ ! -f "public/index.html" ]; then
            echo "❌ 构建失败: 缺少 index.html"
            exit 1
          fi
          echo "✅ 构建验证通过"

      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
